diff --git a/configure.in b/configure.in
index 452f196..1f96de8 100644
--- a/configure.in
+++ b/configure.in
@@ -157,9 +157,6 @@ AM_CONDITIONAL([USE_SDLGFX], test "$USE_SDLGFX" = "1")
 # m
 AC_CHECK_LIB(m, floor, , AC_MSG_ERROR(No math library found))
 
-AC_SEARCH_LIBS(lua_pushboolean,lua lua5.1 lua50, [], [AC_MSG_ERROR(liblua5.1, liblua50, or liblua required)])
-AC_SEARCH_LIBS(luaopen_math,lualib lualib5.1 lualib50, [], [AC_MSG_ERROR(liblualib5.1, liblualib50, or liblualib required)])
-
 dnl ***** Check lua headers, as they are prone to be located random places on random systems! *****
 dnl The following three lines where suggested by Eric Piel, but they don't seem to work on my system
 dnl AC_CHECK_HEADERS(lua.h lua/lua.h lua50/lua.h, [break], [AC_MSG_ERROR(Could not find lua.h)])
@@ -169,11 +166,8 @@ dnl AC_CHECK_HEADERS(lualib.h lua/lualib.h lua50/lualib.h, [break], [AC_MSG_ERRO
 dnl search in this order to put in USE_LUA_VERSION the recenter version
 dnl in .h inclusion, order is reversed to include the recenter version
 USE_LUA_VERSION="unknown"
-AC_CHECK_HEADER(lua.h,        AC_DEFINE(HAVE_LUA_H)       [USE_LUA_VERSION="unknown"])
-AC_CHECK_HEADER(lua/lua.h,    AC_DEFINE(HAVE_LUA_LUA_H)   [USE_LUA_VERSION="unknown"])
-AC_CHECK_HEADER(lua50/lua.h,  AC_DEFINE(HAVE_LUA50_LUA_H) [USE_LUA_VERSION="5.0"])
-AC_CHECK_HEADER(lua51/lua.h,  AC_DEFINE(HAVE_LUA51_LUA_H) [USE_LUA_VERSION="5.1"])
-AC_CHECK_HEADER(lua5.1/lua.h, AC_DEFINE(HAVE_LUA5_1_LUA_H)[USE_LUA_VERSION="5.1"])
+AC_CHECK_HEADER(lua.h,        AC_DEFINE(HAVE_LUA_H)       [USE_LUA_VERSION="5.1"])
+AC_CHECK_HEADER(lua/lua.h,    AC_DEFINE(HAVE_LUA_LUA_H)   [USE_LUA_VERSION="5.1"])
 AC_DEFINE(LUA_COMPAT_MODULE, 1)
 
 AC_LANG_PUSH([C++])
diff --git a/src/Makefile.am b/src/Makefile.am
index 5ea9e81..6b68c84 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -473,7 +473,7 @@ common_SOURCES += $(drawlib_SOURCES)
 common_SOURCES += $(states_SOURCES)
 common_SOURCES += $(thread_SOURCES)
 
-common_LDADD = $(GL_LIBS) $(SDL_LIBS) $(LIBINTL)
+common_LDADD = $(GL_LIBS) $(SDL_LIBS) $(LIBINTL) -llua
 if WIN32
 common_LDADD += $(MINGW32_LIBS)
 endif
