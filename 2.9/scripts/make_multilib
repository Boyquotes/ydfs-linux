# rm /home/linuxconsole25/ydfs/src/icu/source/ydfs-multilib-buildt
# apt-get install gcc-multilib libc6-i386 lib32stdc++-4.9-dev

export PYTHON=/usr/bin/python
export PYTHON2=/usr/bin/python
unset PYTHONPATH
export PATH=$HOME/llvm-multilib/bin/:$HOME/multilib/bin:$HOME/x86_64/bin/:$PATH
export PKG_CONFIG_PATH=$HOME/multilib/lib/pkgconfig:$HOME/multilib/lib32/pkgconfig:$HOME/multilib/share/pkgconfig:/usr/share/pkgconfig/
export LD_LIBRARY_PATH=$HOME/multilib/lib:$HOME/multilib/lib32:$HOME/x86_64/lib/:$LD_LIBRARY_PATH
export CC="gcc -m32"
export CXX="g++ -m32"
export CPPFLAGS="-I$HOME/multilib/include"
export CFLAGS="-I$HOME/multilib/include"
export LDFLAGS="-L$HOME/multilib/lib -L$HOME/multilib/lib32 -Wl,-rpath,$HOME/multilib/lib -Wl,-rpath,$HOME/ydfs/src/qt-everywhere-opensource-src-4.8.7/lib"

install -d $HOME/multilib
install -d $HOME/$ARCH/lib32 || exit 1

install -d $HOME/multilib/include
#FIXME !
#ln -s /usr/src/linux-headers-3.16.0-4-common/include/uapi/ $HOME/multilib/include/
#ln -s /usr/src/linux-headers-3.16.0-4-common/include/linux/ $HOME/multilib/include/
#ln -s /usr/src/linux-headers-3.16.0-4-common/include/asm-generic/ $HOME/multilib/include/

[ ! -e $HOME/multilib/lib32 ] && ln -s $HOME/$ARCH/lib32 $HOME/multilib/lib32
[ ! -e $HOME/multilib/lib ] && ln -s $HOME/$ARCH/lib32 $HOME/multilib/lib

  
# libFS-1 libdmx- \

PKGMULTILIB="zlib-1 gmp xz-5 libunwind libunistring libtasn1 libidn nettle xorgproto alsa-lib ncurses readline libxcrypt pcre- pcre2 util-linux tcl8 sqlite libpng-1.2 libpng-1.6 libffi p11-kit gnutls elfutils expat dbus-1.12.20 glib-2 freetype-2 icu harfbuzz freetype-2 json-c fontconfig-2 \
xtrans libXau libpthread-stubs xcb-proto libxcb \
libX11-1 \
libXext-1 \
libICE-1 \
libSM-1 \
libXScrnSaver-1 \
libXt-1 \
libXmu-1 \
libXpm-3 \
libXaw-1 \
libXfixes-5 \
libXcomposite-0 \
libXrender-0 \
libXcursor-1 \
libXdamage-1 \
libfontenc-1 \
libXfont-1 \
libXft-2 \
libXi-1 \
libXinerama-1 \
libXrandr-1 \
libXres-1 \
libXtst-1 \
libXv-1 \
libXvMC-1 \
libXxf86dga-1 \
libXxf86vm-1 \
libpciaccess-0 \
libxkbfile-1 \
libxshmfence-1 openssl-1 pixman cairo-1 libdrm xz-5 libxml libgpg-error libgcrypt libxslt llvm elfutils libogg libvdpau kmod eudev tiff-4 libjpeg-turbo gdk-pixbuf flac libvorbis libsndfile speex opus-1 opusfile sox- soxr pulseaudio libglvnd wayland-1 mesa expat glu fftw-3.3 libsamplerate SDL2-2 openal-soft fribidi pango-1 atk-2 \
unixODBC libtheora gstreamer-1 libgudev bzip2 libva-2 curl gst-plugins-base" 
# gst-plugins-base " :  GLib requires working CLOCK_MONOTONIC bug sometimes !!
# attr acl kmod eudev"
 # qt-everywhere-opensource-src-4  # pixman lcms2 poppler cairo-1 
for PKG in $PKGMULTILIB
do
  [ "$PKG" = "llvm" ] && install -d $HOME/ydfs/src/$PKG && continue
  echo -n "Test $PKG dir " # && sleep 1
  cd $HOME/ydfs/src/$PKG* || exit $?
done

for PKG in $PKGMULTILIB
do
  echo -n "$PKG " # && sleep 1
  cd $HOME/ydfs/src/$PKG* || exit $?

  if [ ! -L $HOME/multilib/lib32 ]
  then
    echo "$PKG : $HOME/multilib/lib32 is not a link"
    cp -fR $HOME/multilib/lib32/* $HOME/$ARCH/lib32
    rm -fR $HOME/multilib/lib32/
    ln -s $HOME/$ARCH/lib32 $HOME/multilib/lib32
  else
    echo "$PKG : $HOME/multilib/lib32 is a link"
  fi

  if [ ! -L $HOME/multilib/lib ]
  then
    echo "$PKG : $HOME/multilib/lib is not a link"
    cp -fR $HOME/multilib/lib/* $HOME/$ARCH/lib32
    rm -fR $HOME/multilib/lib
    ln -s $HOME/$ARCH/lib32 $HOME/multilib/lib
  else
    echo "$PKG : $HOME/multilib/lib32 is a link"
  fi

  [ "$1" != "force" ] && [ -e ydfs-multilib-buildt ] && cd .. && continue
  [ "$1" != "force" ] && [ -e unix/ydfs-multilib-buildt ] && cd .. && continue
  [ "$1" != "force" ] && [ -e source/ydfs-multilib-buildt ] && cd .. && continue
  [ "$1" != "force" ] && [ -e ncurses-build/ydfs-multilib-buildt ] && cd .. && continue
  pwd
  case $PKG in
    acl )
	cp -fR $HOME/x86_64/include/attr $HOME/multilib/include
	;;
  esac
  case $PKG in
    mesa )
	mkdir build-32
	cd build-32
	echo "[binaries]
llvm-config = '$HOME/llvm-multilib/bin/llvm-config' "> crossfile.ini
        PYTHONPATH="" meson ../ --prefix=$HOME/multilib --libdir=$HOME/multilib/lib32 --native-file crossfile.ini \
    -D b_lto=false \
    -D b_ndebug=true \
    -D platforms=x11,wayland,drm,surfaceless \
    -D dri-drivers=i915,i965,r100,r200,nouveau \
    -D gallium-drivers=r300,r600,radeonsi,nouveau,virgl,svga,swrast,iris \
    -D vulkan-drivers=amd,intel \
    -D swr-arches=avx,avx2 \
    -D dri3=true \
    -D egl=true \
    -D gallium-extra-hud=true \
    -D gallium-nine=true \
    -D gallium-omx=disabled \
    -D gallium-opencl=icd \
    -D gallium-va=true \
    -D gallium-vdpau=true \
    -D gallium-xa=true \
    -D gallium-xvmc=false \
    -D gbm=true \
    -D gles1=false \
    -D gles2=true \
    -D glvnd=true \
    -D zstd=false \
    -D glx=dri \
    -D libunwind=false \
    -D llvm=true \
    -D osmesa=gallium \
    -D shared-glapi=true \
    -D valgrind=false
	;;

    zstd )
	sed -i "s@$HOME/$ARCH@$HOME/multilib@g" */Makefile
        ;;
    bzip2 )
	echo "No config for Bzip2"
        ;;
    elfutils )
	./configure --prefix=$HOME/multilib --disable-debuginfod
	;;
    wayland-1 )
	./configure --prefix=$HOME/multilib --disable-documentation
	;;
    libxslt )
	./configure --prefix=$HOME/multilib --without-python
	;;
    libgcrypt )
	 sed 's:path="amd64":path="i586 i386":' -i mpi/config.links
  	./configure --prefix=$HOME/multilib --disable-static --disable-padlock-support --enable-shared
	;;

    gnutls )
  	./configure  --build=i686-pc-linux-gnu --prefix=$HOME/multilib --with-zlib \
    --with-included-unistring \
    --disable-static \
    --disable-guile \
    --disable-valgrind-tests --disable-doc || exit $?
	;;
    libtheora )
	./configure  --build=i686-pc-linux-gnu --prefix=$HOME/multilib --host=i686-pc-linux-gnu
	;;
    libgudev )
	./configure  --build=i686-pc-linux-gnu --prefix=$HOME/multilib --host=i686-pc-linux-gnu \
    --disable-umockdev
	;;
    libunwind )
	 export CC="gcc -m32"
	 export CXX="g++ -m32"
	./configure  --build=i686-pc-linux-gnu --prefix=$HOME/multilib --host=i686-pc-linux-gnu \
    --disable-documentation 
	;;
    gst-plugins-base )
	export CC="gcc -m32 "
  	export CXX="g++ -m32 "
	 ./configure  --build=i686-pc-linux-gnu\
    --prefix=$HOME/multilib\
    --sysconfdir=/etc\
    --localstatedir=/var\
    --libexecdir=$HOME/multilib/lib32\
    --libdir=$HOME/multilib/lib32\
    --disable-static\
    --disable-examples\
    --disable-gtk-doc-html\
    --disable-gl
     # sed -i -e 's/ -shared / -Wl,-O1,--as-needed\0/g' libtool
     # make || bash
     # [ $? != 0 ] && echo "all:" > gst-libs/gst/gl/Makefile && echo "install:" >> gst-libs/gst/gl/Makefile
	;;
    gstreamer-1 )
	 export CC="gcc -m32"
	 export CXX="g++ -m32"
	./configure  --build=i686-pc-linux-gnu --prefix=$HOME/multilib --disable-maintainer-mode\
    --disable-examples\
    --disable-tests\
    --disable-static\
    --disable-gtk-doc-html\
    --disable-gtk-doc-pdf\
    --disable-gtk-doc\
    --disable-valgrind\
    --disable-benchmarks
	;;
    nettle )
	 export CC="gcc -m32"
	 export CXX="g++ -m32"
	./configure  --build=i686-pc-linux-gnu --prefix=$HOME/multilib --enable-shared --with-include-path=$HOME/multilib/lib32/gmp
	;;
    gmp )
	make clean
	export ABI=32
  	./configure  --enable-fat --enable-cxx --libdir=$HOME/multilib/lib32 --includedir=$HOME/multilib/lib32/gmp  --prefix=$HOME/multilib || exit $?
	;;
    libxml )
  	./configure --without-python --prefix=$HOME/multilib || exit $?
	;;
    alsa-lib )
  	./configure --disable-python --prefix=$HOME/multilib || exit $?
	;;
    qt-everywhere-opensource-src-4 )
	patch -p1 < $HOME_DIBAB/packages/patches/qt-everywhere-opensource-src-build32.diff 
	# make
	# From https://projects.archlinux.org/svntogit/community.git/tree/trunk/PKGBUILD?h=packages/lib32-qt4
  sed -i "/^QMAKE_LINK\s/s|g++|g++ -m32|g" mkspecs/common/g++-base.conf
  sed -i "s|-O2|${CXXFLAGS} -m32|" mkspecs/common/g++-base.conf
  sed -i "s|-O2|${CXXFLAGS} -m32|" mkspecs/common/gcc-base.conf
  sed -i "/^QMAKE_LFLAGS_RPATH/s| -Wl,-rpath,||g" mkspecs/common/gcc-base-unix.conf
  sed -i "/^QMAKE_LFLAGS\s/s|+=|+= ${LDFLAGS} -m32|g" mkspecs/common/gcc-base.conf
  sed -i "s|-Wl,-O1|-m32 -Wl,-O1|" mkspecs/common/g++-unix.conf
  sed -e "s|-O2|$CXXFLAGS -m32|" \
      -e "/^QMAKE_RPATH/s| -Wl,-rpath,||g" \
      -e "/^QMAKE_LINK\s/s|g++|g++ -m32|g" \
      -e "/^QMAKE_LFLAGS\s/s|+=|+= $LDFLAGS|g" \
      -i mkspecs/common/g++.conf
	ARCH=multilib ./configure -confirm-license -opensource -v -platform linux-g++-32 \
    -prefix $HOME/multilib -system-sqlite \
    -no-phonon \
    -no-phonon-backend \
    -no-gtkstyle -webkit \
    -graphicssystem raster \
    -openssl-linked \
    -nomake demos \
    -nomake examples \
    -nomake docs \
    -optimized-qmake \
    -no-rpath \
    -dbus-linked \
    -reduce-relocations \
    -no-openvg || exit $?

    ;;
    pulseaudio )
	if [ ! -e libtool-2.4.6 ]
	then
	  wget ftp://ftp.gnu.org/pub/gnu/libtool/libtool-2.4.6.tar.gz
	  tar xvf libtool-2.4.6.tar.gz
	  cd libtool-2.4.6
		./configure  --prefix=$HOME/multilib ||Â exit $?
		make || exit $?
		make install || exit $?
	  cd ..	
	fi
  	# NOCONFIGURE=1 ./bootstrap.sh
	./configure  --prefix=$HOME/multilib     --disable-tcpwrap \
    --disable-udev --disable-gconf --disable-avahi --disable-jack --disable-bluez4 \
    --disable-samplerate \
    --without-fftw --disable-rpath \
    --disable-default-build-tests --without-caps ||exit 1
    ;;
    ncurses )

	 mkdir ncursesw-build
	 mkdir ncurses-build

  cd ncursesw-build
  ../configure --prefix=$HOME/multilib \
     --with-shared --with-normal --without-debug --without-ada \
     --enable-widec
  make
  make install
	cd ..
  cd ncurses-build
  ../configure --prefix=$HOME/multilib \
    --with-shared --with-normal --without-debug --without-ada 
    ;;
    tcl8* )
	cd unix
  	./configure --prefix=$HOME/multilib || exit $?
    ;;
    fontconfig* )
	./configure --prefix=$HOME/multilib --disable-docs || exit $?
    ;;
    pcre-* )
	./configure --prefix=$HOME/multilib --enable-unicode-properties || exit $?
    ;;
    icu )
	cd source
  	./configure --prefix=$HOME/multilib || exit $?
    ;;
    #util-linux* )
  #	./configure CC="${CC:-cc} -m32" --libdir=/usr/lib32 || exit $?
	# cp $HOME/x86_64/share/aclocal/pkg.m4 m4/
	# autoreconf
  	#./configure --prefix=$HOME/multilib --without-udev --disable-pylibmount --without-ncurses --disable-chfn-chsh --disable-sulogin --disable-runuser --disable-su --disable-login --disable-makeinstall-chown || exit $?
  #  ;;
    dbus-1.12.20 )
  	./configure --prefix=$HOME/multilib  --disable-verbose-mode --disable-static --disable-tests --disable-asserts --disable-systemd || exit $?
    ;;
    freetype-2* )
	if [ -e $HOME/multilib/lib/libharfbuzz.so ]
	then
  	  ./configure --prefix=$HOME/multilib || exit $?
	else
  	  ./configure --prefix=$HOME/multilib --with-harfbuzz=no || exit $?
	fi
    ;;
    harfbuzz* )
	./configure --prefix=$HOME/multilib -disable-silent-rules --with-graphite2=no --without-cairo || exit $?
    ;;
    readline )
	sed -i 's|-Wl,-rpath,$(libdir) ||g' support/shobj-conf
  	./configure --prefix=$HOME/multilib || exit $?
    ;;
    openssl* )
	./Configure --prefix=$HOME/multilib --openssldir=$HOME/multilib/etc/ssl --libdir=lib32 \
		shared zlib no-ssl3-method \
		linux-elf \
		"-Wa,--noexecstack ${CPPFLAGS} ${CFLAGS} ${LDFLAGS}"

	make MAKEDEPPROG="${CC}" depend
    ;;
    llvm )
	[ -e $HOME/llvm-multilib ] && continue
	cd $HOME
	[ ! -e llvm9-multilib.tar.gz ] && wget http://jukebox.linuxconsole.org/toolchains/llvm9-multilib.tar.gz
	tar xzvhf llvm9-multilib.tar.gz
	#	$HOME_DIBAB/scripts/build-llvm-clang
    ;;
    cairo-1* )
	# echo "Disable Test .." && sleep 2
  	sed -i "s| test perf| perf|g" Makefile.am
	# echo "Done" && sleep 2
  	# ./configure --prefix=$HOME/multilib --enable-pdf=no --disable-pdf --disable-full-testing --disable-static --disable-test-suite || exit $?
	autoreconf
  	./configure --prefix=$HOME/multilib --disable-full-testing --disable-static --disable-test-suite || exit $?
    ;;
    poppler )
  	./configure --prefix=$HOME/multilib --disable-poppler-qt4 --disable-cairo-output || exit $?
    ;;
    flac )
  	./configure --prefix=$HOME/multilib --disable-sse || exit $?
    ;;
    gtk+-2 )
  	./configure --prefix=$HOME/multilib --disable-cups || exit $?
    ;;
    libjpeg-turbo )
  	# ./configure --prefix=$HOME/multilib --without-simd || exit $?
	mkdir build32
	 cd build32
	export CC="gcc -m32 -mstackrealign"
  	export CXX="g++ -m32 -mstackrealign"
  	cmake .. \
    	-DCMAKE_INSTALL_PREFIX=$HOME/multilib 
        touch ../ydfs-multilib-buildt
	;;
    soxr )
	mkdir build32
	 cd build32
	export CC="gcc -m32 -mstackrealign"
  	export CXX="g++ -m32 -mstackrealign"
  	cmake .. \
    	-DCMAKE_INSTALL_PREFIX=$HOME/multilib -DALSOFT_EXAMPLES=OFF
        touch ../ydfs-multilib-buildt
	;;
    openal-soft )
	export CC="gcc -m32 -mstackrealign"
  	export CXX="g++ -m32 -mstackrealign"
	cmake -DCMAKE_INSTALL_PREFIX=$HOME/multilib -Bbuild \
    -DCMAKE_BUILD_TYPE=None -DALSOFT_NO_CONFIG_UTIL=ON \
    -DCMAKE_INSTALL_LIBDIR=lib32
        cmake --build build
  	cmake .. \
	;;
    glib-2)
	patch -p1 < $HOME_DIBAB/packages/patches/lib32-glib2.diff
	patch -p1 < $HOME_DIBAB/packages/patches/glib2-multilib.diff
	export CC="gcc -m32 -mstackrealign"
  	export CXX="g++ -m32 -mstackrealign"
	sleep 5
	mkdir build-32
	cd build-32
        PYTHONPATH="" meson ../ --prefix=$HOME/multilib --libdir=$HOME/multilib/lib32 -D b_lto=false \
    -D b_pie=false \
    -D selinux=disabled \
     || exit 1
	;;
    libglvnd)
	mkdir build-32
	cd build-32
        PYTHONPATH="" meson ../ --prefix=$HOME/multilib --libdir=$HOME/multilib/lib32    -D headers=false \
    -D gles1=false || exit 1
	;;
    pango-1)
	mkdir build-32
	cd build-32
        PYTHONPATH="" meson ../ --prefix=$HOME/multilib --libdir=$HOME/multilib/lib32 || exit 1
	;;
    atk-2)
	mkdir build-32
	cd build-32
        PYTHONPATH="" meson ../ --prefix=$HOME/multilib --libdir=$HOME/multilib/lib32 || exit 1
	;;
    gdk-pixbuf)
	mkdir build-32
	cd build-32
        PYTHONPATH="" meson ../ --prefix=$HOME/multilib --libdir=$HOME/multilib/lib32 || exit 1
	;;
    * )
	pwd
  	./configure --prefix=$HOME/multilib || exit $?
    ;;
  esac

  echo "Run make clean" 
  make clean
  case $PKG in
    libxslt )
	touch doc/xsltproc.1
	;;
    bzip2 )
        make -f Makefile-libbz2_so || exit 17
	install -d $HOME/multilib/lib
	cp libbz2.so.1.0 $HOME/multilib/lib
	ln -s libbz2.so.1.0 $HOME/multilib/lib/libbz2.so
	;;
    glib-2)
	echo "Build glib-2"
        PYTHONPATH="" ninja || exit 1
	;;
    mesa)
	# sed -i "s@$HOME/$ARCH/lib/libzstd.so@$HOME/multilib/lib/libzstd.so@g" build.ninja
        PYTHONPATH="" ninja || exit 1
	;;
    libglvnd)
        PYTHONPATH="" ninja || exit 1
	;;
    pango-1)
        PYTHONPATH="" ninja || exit 1
	;;
    atk-2)
        PYTHONPATH="" ninja || exit 1
	;;
    gdk-pixbuf)
        PYTHONPATH="" ninja || exit 1
	;;
    readline )
	make SHLIB_LIBS=-lncurses
	;;
    llvm )
	;;
    openal-soft )
	cd build
	make
	;;
    * )
  	echo "Run make "
  	make || exit $?
	;;
  esac
	
  case $PKG in
    	llvm )
	;;
    	glib-2)
	;;
    	mesa)
	;;
    	libglvnd)
	;;
    	pango-1)
	;;
    	atk-2)
	;;
    	gdk-pixbuf)
	;;
    * )
  	make || exit $?
	;;
  esac

  case $PKG in
    llvm-build* )
  	make install || exit $?
	cd ..
	;;
    llvm )
	;;
    openal-soft )
  	make install || exit $?
	cd ..
	;;
    glib-2)
        PYTHONPATH="" ninja install || exit 1
	cd ..
	;;
    mesa)
        PYTHONPATH="" ninja install || exit 1
    cp $HOME/x86_64/include/GL/gl* $HOME/multilib/include/GL/
    cp -a $HOME/x86_64/include/KHR/ $HOME/multilib/include/
    cp -a $HOME/x86_64/include/EGL/ $HOME/multilib/include/

	cd ..
	;;
    libglvnd)
        PYTHONPATH="" ninja install || exit 1
	cd ..
	;;
    pango-1)
        PYTHONPATH="" ninja install || exit 1
	cd ..
	;;
    atk-2)
        PYTHONPATH="" ninja install || exit 1
	cd ..
	;;
    gdk-pixbuf)
        PYTHONPATH="" ninja install || exit 1
	cd ..
	;;
    * )
  	echo "Run make install "
  	VERBOSE=1 make install || exit $?
        [ -e getfacl/getfacl.c ] && make install-lib install-dev
	[ -e getfattr/getfattr.c ] && make install-lib install-dev
	;;
  esac
  touch ydfs-multilib-buildt
  cd ..
done

cp -a /usr/lib32/* $HOME/$ARCH/lib32
cp -a /usr/lib32 $HOME/$ARCH/lib32-root
cp $HOME/llvm-multilib/lib32/libLLVM-9.so $HOME/$ARCH/lib32 || exit 1

ls $HOME/$ARCH/lib32/*.a |while read file
do
  echo  $file
  rm  $file
done

echo
