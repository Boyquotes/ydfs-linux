From aa12d147f05d91762901089985c297ca673e3404 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Xan=20L=C3=B3pez?= <xan@igalia.com>
Date: Fri, 1 Feb 2019 10:48:45 +0100
Subject: [PATCH] [CMake] Build 32bit binaries on Linux/64bit when the --32-bit
 is passed to build-jsc https://bugs.webkit.org/show_bug.cgi?id=194147

Reviewed by NOBODY (OOPS!).

.:

* CMakeLists.txt: set WTF_CPU properly if FORCE_32BIT is set in
build-jsc.

Tools:

To make --32-bit work correctly on Linux/64bit we need to:

- Set FORCE_32BIT on, which will be read by CMake to set WTF_CPU
correctly. Ideally we'd just redefine CMAKE_SYSTEM_PROCESSOR, but
unfortunately CMake only allows us to do this during
crosscompilation, which is overkill here.
- Set CMAKE_PREFIX_PATH and CMAKE_LIBRARY_ARCHITECTURE so that the
pkg-config detection module uses the x86 .pc files instead of the
x86_64 ones.
- Set the -m32 flags for the compiler.

* Scripts/webkitdirs.pm:
(generateBuildSystemFromCMakeProject):
---
 CMakeLists.txt              | 10 +++++++++-
 ChangeLog                   | 10 ++++++++++
 Tools/ChangeLog             | 21 +++++++++++++++++++++
 Tools/Scripts/webkitdirs.pm |  9 +++++++++
 4 files changed, 49 insertions(+), 1 deletion(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 31adc44968c..1e753715c8f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -93,7 +93,15 @@ elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "^mips64")
 elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "^mips")
     set(WTF_CPU_MIPS 1)
 elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "(x64|x86_64|amd64)")
-    set(WTF_CPU_X86_64 1)
+    # FORCE_32BIT is set in the build script when --32-bit is passed
+    # on a Linux/intel 64bit host. This allows us to produce 32bit
+    # binaries without setting the build up as a crosscompilation,
+    # which is the only way to modify CMAKE_SYSTEM_PROCESSOR.
+    if (FORCE_32BIT)
+        set(WTF_CPU X86 1)
+    else ()
+        set(WTF_CPU_X86_64 1)
+    endif ()
 elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "(i[3-6]86|x86)")
     set(WTF_CPU_X86 1)
 elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "ppc")
diff --git a/ChangeLog b/ChangeLog
index 0f7dfd4bba7..4e6e3dd19d8 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,13 @@
+2019-02-01  Xan Lopez  <xan@igalia.com>
+
+        [CMake] Build 32bit binaries on Linux/64bit when the --32-bit is passed to build-jsc
+        https://bugs.webkit.org/show_bug.cgi?id=194147
+
+        Reviewed by NOBODY (OOPS!).
+
+        * CMakeLists.txt: set WTF_CPU properly if FORCE_32BIT is set in
+        build-jsc.
+
 2019-03-07  Commit Queue  <commit-queue@webkit.org>
 
         Unreviewed, rolling out r242354.
diff --git a/Tools/ChangeLog b/Tools/ChangeLog
index 67cad9fc4d9..bf669fe8b81 100644
--- a/Tools/ChangeLog
+++ b/Tools/ChangeLog
@@ -1,3 +1,24 @@
+2019-02-01  Xan Lopez  <xan@igalia.com>
+
+        [CMake] Build 32bit binaries on Linux/64bit when the --32-bit is passed to build-jsc
+        https://bugs.webkit.org/show_bug.cgi?id=194147
+
+        Reviewed by NOBODY (OOPS!).
+
+        To make --32-bit work correctly on Linux/64bit we need to:
+
+        - Set FORCE_32BIT on, which will be read by CMake to set WTF_CPU
+        correctly. Ideally we'd just redefine CMAKE_SYSTEM_PROCESSOR, but
+        unfortunately CMake only allows us to do this during
+        crosscompilation, which is overkill here.
+        - Set CMAKE_PREFIX_PATH and CMAKE_LIBRARY_ARCHITECTURE so that the
+        pkg-config detection module uses the x86 .pc files instead of the
+        x86_64 ones.
+        - Set the -m32 flags for the compiler.
+
+        * Scripts/webkitdirs.pm:
+        (generateBuildSystemFromCMakeProject):
+
 2019-02-20  Xan Lopez  <xan@igalia.com>
 
         [JSC][x86] Drop support for x87 floating point
diff --git a/Tools/Scripts/webkitdirs.pm b/Tools/Scripts/webkitdirs.pm
index 5f0254dcbbc..baf844d933b 100755
--- a/Tools/Scripts/webkitdirs.pm
+++ b/Tools/Scripts/webkitdirs.pm
@@ -2262,6 +2262,15 @@ sub generateBuildSystemFromCMakeProject
     # Some ports have production mode, but build-webkit should always use developer mode.
     push @args, "-DDEVELOPER_MODE=ON" if isGtk() || isJSCOnly() || isWPE() || isWinCairo();
 
+    if ($architecture eq "x86_64" && shouldBuild32Bit()) {
+        # CMAKE_LIBRARY_ARCHITECTURE is needed to get the right .pc
+        # files in Debian-based systems, for the others
+        # CMAKE_PREFIX_PATH will get us /usr/lib, which should be the
+        # right path for 32bit. See FindPkgConfig.cmake.
+        push @cmakeArgs, '-DFORCE_32BIT=ON -DCMAKE_PREFIX_PATH="/usr" -DCMAKE_LIBRARY_ARCHITECTURE=x86';
+        $ENV{"CFLAGS"} =  "-m32" . ($ENV{"CFLAGS"} || "");
+        $ENV{"CXXFLAGS"} = "-m32" . ($ENV{"CXXFLAGS"} || "");
+    }
     push @args, @cmakeArgs if @cmakeArgs;
 
     my $cmakeSourceDir = isCygwin() ? windowsSourceDir() : sourceDir();
-- 
2.20.1

